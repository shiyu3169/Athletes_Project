{"version":3,"sources":["./src/$_gendir lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/event/event-detail/event-detail.component.css","./src/app/components/event/event-detail/event-detail.component.html","./src/app/components/event/event-detail/event-detail.component.ts","./src/app/components/event/event-edit/event-edit.component.css","./src/app/components/event/event-edit/event-edit.component.html","./src/app/components/event/event-edit/event-edit.component.ts","./src/app/components/event/event-list/event-list.component.css","./src/app/components/event/event-list/event-list.component.html","./src/app/components/event/event-list/event-list.component.ts","./src/app/components/event/event-new/event-new.component.css","./src/app/components/event/event-new/event-new.component.html","./src/app/components/event/event-new/event-new.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/user/choose/choose.component.css","./src/app/components/user/choose/choose.component.html","./src/app/components/user/choose/choose.component.ts","./src/app/components/user/login/login.component.css","./src/app/components/user/login/login.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/profile/detail/detail.component.css","./src/app/components/user/profile/detail/detail.component.html","./src/app/components/user/profile/detail/detail.component.ts","./src/app/components/user/profile/profile.component.css","./src/app/components/user/profile/profile.component.html","./src/app/components/user/profile/profile.component.ts","./src/app/components/user/register/register.component.css","./src/app/components/user/register/register.component.html","./src/app/components/user/register/register.component.ts","./src/app/services/authentication.service.client.ts","./src/app/services/event.service.client.ts","./src/app/services/home.service.client.ts","./src/app/services/shared.service.client.ts","./src/app/services/user.service.client.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- Meta tags for making event for mobile-->\\r\\n<meta name=\\\"apple-mobile-web-app-capable\\\" content=\\\"yes\\\">\\r\\n<meta name=\\\"apple-mobile-web-app-status-bar-style\\\" content=\\\"black\\\">\\r\\n<meta name=\\\"viewport\\\" content=\\\"initial-scale=1.25, user-scalable=no\\\">\\r\\n<meta charset=\\\"UTF-8\\\">\\r\\n<link href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\"/>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { QuillEditorModule } from 'ngx-quill-editor';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { Routing } from './app.routing';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { ProfileComponent } from './components/user/profile/profile.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { EventNewComponent } from './components/event/event-new/event-new.component';\r\nimport { EventEditComponent } from './components/event/event-edit/event-edit.component';\r\nimport { EventListComponent } from './components/event/event-list/event-list.component';\r\n\r\nimport { UserService } from './services/user.service.client';\r\nimport { EventService } from './services/event.service.client';\r\n\r\nimport { SharedService } from './services/shared.service.client';\r\nimport { AuthenticationService } from './services/authentication.service.client';\r\nimport { HomeService } from './services/home.service.client';\r\nimport { ChooseComponent } from './components/user/choose/choose.component';\r\nimport { EventDetailComponent } from './components/event/event-detail/event-detail.component';\r\nimport { DetailComponent } from './components/user/profile/detail/detail.component';\r\n\r\n@NgModule({\r\n  // Declare components here\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RegisterComponent,\r\n    EventEditComponent,\r\n    EventNewComponent,\r\n    EventListComponent,\r\n    ChooseComponent,\r\n    EventDetailComponent,\r\n    DetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    Routing,\r\n    QuillEditorModule\r\n  ],\r\n  // Client Side services here\r\n  providers: [\r\n    UserService,\r\n    EventService,\r\n    SharedService,\r\n    AuthenticationService,\r\n    HomeService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { ProfileComponent } from './components/user/profile/profile.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { EventEditComponent } from './components/event/event-edit/event-edit.component';\r\nimport { EventListComponent } from './components/event/event-list/event-list.component';\r\nimport { EventNewComponent } from './components/event/event-new/event-new.component';\r\nimport { AuthenticationService } from './services/authentication.service.client';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ChooseComponent } from './components/user/choose/choose.component';\r\nimport { EventDetailComponent } from './components/event/event-detail/event-detail.component';\r\nimport {DetailComponent} from './components/user/profile/detail/detail.component';\r\n\r\nconst APP_ROUTES: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'choose', component: ChooseComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'user', component: ProfileComponent, canActivate: [AuthenticationService] },\r\n  {path: 'user/:uid/detail', component: DetailComponent, canActivate: [AuthenticationService] },\r\n  {path: 'user/:uid/event', component: EventListComponent, canActivate: [AuthenticationService] },\r\n  {path: 'user/:uid/event/new', component: EventNewComponent, canActivate: [AuthenticationService] },\r\n  {path: 'user/:uid/event/:wid', component: EventEditComponent, canActivate: [AuthenticationService] },\r\n  {path: 'user/:uid/event/:wid/detail', component: EventDetailComponent, canActivate: [AuthenticationService] }\r\n];\r\n\r\n// Export the routes as module providers\r\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-detail/event-detail.component.css\n// module id = ./src/app/components/event/event-detail/event-detail.component.css\n// module chunks = main","module.exports = \"\\r\\n<!-- top navbar-->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 hidden-xs\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <p class=\\\"navbar-text pull-left\\\">\\r\\n          <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n             class=\\\"navbar-link sw-text-white\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\r\\n          </a>\\r\\n        </p>\\r\\n        <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n           class=\\\"pull-left navbar-brand thick\\\">\\r\\n          <b class=\\\"sw-text-white\\\">Events</b>\\r\\n        </a>\\r\\n        <a routerLink=\\\"/user/{{uid}}/event/new\\\"\\r\\n           class=\\\"navbar-link navbar-text pull-right sw-icon-padding\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-plus sw-text-white\\\"></span>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-8 pull-right\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <a routerLink=\\\"/user/{{uid}}/event/{{wid}}\\\"\\r\\n           class=\\\"pull-left navbar-brand thick\\\">\\r\\n          <b class=\\\"sw-text-white\\\">Event Detail</b>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<!--left events-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 hidden-xs\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item sw-borderless\\\"\\r\\n            *ngFor=\\\"let event of events\\\">\\r\\n          <a class=\\\"sw-link\\\"\\r\\n             routerLink=\\\"/user/{{uid}}/event/{{event._id}}/detail\\\">{{event.name}}</a>\\r\\n          <a routerLink=\\\"/user/{{uid}}/event/{{event._id}}\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-cog pull-right\\\"></span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <!--right editor-->\\r\\n    <div class=\\\"col-sm-8 col-xs-12\\\">\\r\\n      <div *ngIf=\\\"registered\\\"\\r\\n           class=\\\"alert alert-success\\\" >\\r\\n        Register successfully!\\r\\n      </div>\\r\\n      <form (ngSubmit)=\\\"update()\\\"\\r\\n            #f =\\\"ngForm\\\"\\r\\n            id=\\\"webForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"name\\\"\\r\\n                 name=\\\"name\\\"\\r\\n                 readonly\\r\\n                 ngModel=\\\"{{event.name}}\\\"\\r\\n                 #name=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"description\\\">Event Desciption</label>\\r\\n          <textarea id=\\\"description\\\"\\r\\n                    name=\\\"description\\\"\\r\\n                    rows=\\\"5\\\"\\r\\n                    readonly\\r\\n                    ngModel=\\\"{{event.description}}\\\"\\r\\n                    #description=\\\"ngModel\\\"\\r\\n                    class=\\\"form-control\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"address\\\">Street</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"address\\\"\\r\\n                 name=\\\"address\\\"\\r\\n                 readonly\\r\\n                 ngModel=\\\"{{event.address}}\\\"\\r\\n                 #address=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"city\\\">City</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"city\\\"\\r\\n                   name=\\\"city\\\"\\r\\n                   readonly\\r\\n                   ngModel=\\\"{{event.city}}\\\"\\r\\n                   #city=\\\"ngModel\\\"\\r\\n                   class=\\\"form-control\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"state\\\"\\r\\n                   name=\\\"state\\\"\\r\\n                   readonly\\r\\n                   ngModel=\\\"{{event.state}}\\\"\\r\\n                   #state=\\\"ngModel\\\"\\r\\n                   class=\\\"form-control\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"time\\\">Event Time</label>\\r\\n          <input type=\\\"datetime-local\\\"\\r\\n                 id=\\\"time\\\"\\r\\n                 name=\\\"time\\\"\\r\\n                 readonly\\r\\n                 ngModel=\\\"{{event.time}}\\\"\\r\\n                 #time=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-4\\\" *ngIf=\\\"user.role !== 'organization'\\\">\\r\\n            <a (click)=\\\"rsvp()\\\"\\r\\n               class=\\\"btn btn-success btn-block\\\">RSVP</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"col-xs-3\\\" *ngIf=\\\"user.role==='organization'\\\">\\r\\n        <div class=\\\"panel panel-info\\\">\\r\\n          <div class = \\\"panel-heading\\\">\\r\\n            <h3 class = \\\"panel-title\\\">Registered Runner</h3>\\r\\n          </div>\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item sw-borderless\\\"\\r\\n                *ngFor=\\\"let runner of runners\\\">\\r\\n              <button class=\\\"btn sw-button-transparent\\\"\\r\\n                      routerLink=\\\"/user/{{runner._id}}/detail\\\">{{runner.username}}</button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-3\\\" *ngIf=\\\"user.role==='organization'\\\">\\r\\n        <div class=\\\"panel panel-info\\\">\\r\\n          <div class = \\\"panel-heading\\\">\\r\\n            <h3 class = \\\"panel-title\\\">Registered Volunteers</h3>\\r\\n          </div>\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item sw-borderless\\\"\\r\\n                *ngFor=\\\"let vol of vols\\\">\\r\\n              <button class=\\\"btn sw-button-transparent\\\"\\r\\n                      routerLink=\\\"/user/{{vol._id}}/detail\\\">{{vol.username}}</button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <div class=\\\"col-xs-4\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-8\\\">\\r\\n          <img src={{result.icon_url}}>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <hr/>\\r\\n        <div class=\\\"panel panel-default\\\" *ngIf=\\\"result !== ''\\\">\\r\\n          <div class=\\\"panel-body\\\">Today's Weather: {{result.weather}}</div>\\r\\n          <div class=\\\"panel-body\\\">Temprature: {{result.temperature_string}}</div>\\r\\n          <div class=\\\"panel-body\\\">Feels like: {{result.feelslike_string}}</div>\\r\\n          <div class=\\\"panel-body\\\">Wind: {{result.wind_string}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/user\\\"\\r\\n       class=\\\"navbar-text pull-right\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-user sw-icon-padding sw-text-white\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-detail/event-detail.component.html\n// module id = ./src/app/components/event/event-detail/event-detail.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { EventService} from '../../../services/event.service.client';\r\nimport { Event } from '../../../models/event.model.client';\r\nimport {SharedService} from '../../../services/shared.service.client';\r\nimport DateTimeFormat = Intl.DateTimeFormat;\r\nimport {User} from '../../../models/user.model.client';\r\nimport {UserService} from '../../../services/user.service.client';\r\nimport {HomeService} from \"../../../services/home.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-event-detail',\r\n  templateUrl: './event-detail.component.html',\r\n  styleUrls: ['./event-detail.component.css']\r\n})\r\nexport class EventDetailComponent implements OnInit {\r\n\r\n  uid: String;\r\n  wid: String;\r\n  events: [Event];\r\n  runners: [User];\r\n  vols: [User];\r\n  name: String;\r\n  description: String;\r\n  address: String;\r\n  city: String;\r\n  state: String;\r\n  time: DateTimeFormat;\r\n  registered: boolean;\r\n  result: Object = '';\r\n  event: Event = {\r\n    _id: '',\r\n    name: '',\r\n    orgId: '',\r\n    description: '',\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    time: new DateTimeFormat\r\n  };\r\n  user: any;\r\n\r\n  constructor(private activeRouter: ActivatedRoute, private eventService: EventService,\r\n              private sharedService: SharedService, private userService: UserService,\r\n              private homeService: HomeService) { }\r\n\r\n  rsvp() {\r\n    this.eventService.register(this.user._id, this.event._id)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.registered = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  findRegister(wid) {\r\n    this.userService.findRegister(wid, 'runner')\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.runners = data;\r\n          this.userService.findRegister(wid, 'volunteer')\r\n            .subscribe(\r\n              (data2: any) => {\r\n                this.vols = data2;\r\n                this.searchWeather();\r\n              }\r\n            );\r\n        }\r\n      );\r\n  }\r\n\r\n  searchWeather() {\r\n    this.homeService.searchWeather(this.city, this.state)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.result = data.current_observation;\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.activeRouter.params.subscribe(params => {\r\n      this.uid = params['uid'];\r\n      this.wid = params['wid'];\r\n      this.user = this.sharedService.user;\r\n      this.registered = false;\r\n      this.eventService.findEventsByUser(this.uid)\r\n        .subscribe(\r\n          (events: [Event]) => {\r\n            this.events = events;\r\n            this.eventService.findEventById(this.wid)\r\n              .subscribe(\r\n                (event: Event) => {\r\n                  this.event = event;\r\n                  this.name = this.event.name;\r\n                  this.description = this.event.description;\r\n                  this.address = this.event.address;\r\n                  this.city = this.event.city;\r\n                  this.state = this.event.state;\r\n                  this.time = this.event.time;\r\n                  this.findRegister(this.wid);\r\n                }\r\n              );\r\n          }\r\n        );\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/event/event-detail/event-detail.component.ts","module.exports = \".sw-nav-blue {\\r\\n  background-color: #337ab7;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-edit/event-edit.component.css\n// module id = ./src/app/components/event/event-edit/event-edit.component.css\n// module chunks = main","module.exports = \"\\r\\n<!-- top navbar-->\\r\\n<nav class=\\\"navbar navbar-fixed-top navbar-inverse\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 hidden-xs\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <p class=\\\"navbar-text pull-left\\\">\\r\\n          <a routerLink=\\\"/user\\\"\\r\\n             class=\\\"navbar-link sw-text-white\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\r\\n          </a>\\r\\n        </p>\\r\\n        <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n           class=\\\"pull-left navbar-brand thick\\\">\\r\\n          <b class=\\\"sw-text-white\\\">Events</b>\\r\\n        </a>\\r\\n        <a routerLink=\\\"/user/{{uid}}/event/new\\\"\\r\\n           class=\\\"navbar-link navbar-text pull-right sw-icon-padding\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-plus sw-text-white\\\"></span>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-8 pull-right\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <a routerLink=\\\"/user/{{uid}}/event/{{wid}}\\\"\\r\\n           class=\\\"pull-left navbar-brand thick\\\">\\r\\n          <b class=\\\"sw-text-white\\\">Edit Event</b>\\r\\n        </a>\\r\\n        <button type=\\\"submit\\\"\\r\\n                [disabled]=\\\"!f.valid\\\"\\r\\n                form=\\\"webForm\\\"\\r\\n                class=\\\"btn btn-xs sw-button-transparent navbar-link navbar-text pull-right sw-icon-padding\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-ok sw-text-white\\\"></span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<!--left events-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 hidden-xs\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item sw-borderless\\\"\\r\\n            *ngFor=\\\"let event of events\\\">\\r\\n          <a class=\\\"sw-link\\\"\\r\\n             routerLink=\\\"/user/{{uid}}/event/{{event._id}}/page\\\">{{event.name}}</a>\\r\\n          <a routerLink=\\\"/user/{{uid}}/event/{{event._id}}\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-cog pull-right\\\"></span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <!--right editor-->\\r\\n    <div class=\\\"col-sm-8 col-xs-12\\\">\\r\\n      <form (ngSubmit)=\\\"update()\\\"\\r\\n            #f =\\\"ngForm\\\"\\r\\n            id=\\\"webForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"name\\\"\\r\\n                 name=\\\"name\\\"\\r\\n                 required\\r\\n                 placeholder=\\\"any name\\\"\\r\\n                 ngModel=\\\"{{event.name}}\\\"\\r\\n                 #name=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <span class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"!name.valid && name.touched\\\">Name can't be empty!</span>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"description\\\">Event Desciption</label>\\r\\n          <textarea id=\\\"description\\\"\\r\\n                    name=\\\"description\\\"\\r\\n                    rows=\\\"5\\\"\\r\\n                    placeholder=\\\"anything related to this event\\\"\\r\\n                    ngModel=\\\"{{event.description}}\\\"\\r\\n                    #description=\\\"ngModel\\\"\\r\\n                    class=\\\"form-control\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"address\\\">Street</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"address\\\"\\r\\n                 name=\\\"address\\\"\\r\\n                 placeholder=\\\"Address of the event\\\"\\r\\n                 ngModel=\\\"{{event.address}}\\\"\\r\\n                 #address=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"city\\\">City</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"city\\\"\\r\\n                   name=\\\"city\\\"\\r\\n                   placeholder=\\\"City of event\\\"\\r\\n                   ngModel=\\\"{{event.city}}\\\"\\r\\n                   #city=\\\"ngModel\\\"\\r\\n                   class=\\\"form-control\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"state\\\"\\r\\n                   name=\\\"state\\\"\\r\\n                   placeholder=\\\"state of the event\\\"\\r\\n                   ngModel=\\\"{{event.state}}\\\"\\r\\n                   #state=\\\"ngModel\\\"\\r\\n                   class=\\\"form-control\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"time\\\">Event Time</label>\\r\\n          <input type=\\\"datetime-local\\\"\\r\\n                 id=\\\"time\\\"\\r\\n                 name=\\\"time\\\"\\r\\n                 placeholder=\\\"Event Time\\\"\\r\\n                 ngModel=\\\"{{event.time}}\\\"\\r\\n                 #time=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <a (click)=\\\"remove()\\\"\\r\\n               class=\\\"btn btn-danger btn-block\\\">Delete</a>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-4 pull-right\\\">\\r\\n            <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n               class=\\\"btn btn-warning btn-block\\\">Cancel</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/user\\\"\\r\\n       class=\\\"navbar-text pull-right\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-user sw-icon-padding sw-text-white\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-edit/event-edit.component.html\n// module id = ./src/app/components/event/event-edit/event-edit.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { EventService} from '../../../services/event.service.client';\r\nimport { Event } from '../../../models/event.model.client';\r\nimport { NgForm } from '@angular/forms';\r\nimport DateTimeFormat = Intl.DateTimeFormat;\r\n\r\n@Component({\r\n  selector: 'app-event-edit',\r\n  templateUrl: './event-edit.component.html',\r\n  styleUrls: ['./event-edit.component.css']\r\n})\r\nexport class EventEditComponent implements OnInit {\r\n\r\n  @ViewChild('f') webForm: NgForm;\r\n\r\n  uid: String;\r\n  wid: String;\r\n  events: Event[];\r\n  name: String;\r\n  description: String;\r\n  address: String;\r\n  city: String;\r\n  state: String;\r\n  time: DateTimeFormat;\r\n  event: Event = {\r\n    _id: '',\r\n    name: '',\r\n    orgId: '',\r\n    description: '',\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    time: new DateTimeFormat\r\n  };\r\n\r\n  constructor(private eventService: EventService,\r\n              private activeRouter: ActivatedRoute, private router: Router) { }\r\n\r\n  update() {\r\n    this.name = this.webForm.value.name;\r\n    this.description = this.webForm.value.description;\r\n    this.address = this.webForm.value.address;\r\n    this.city = this.webForm.value.city;\r\n    this.state = this.webForm.value.state;\r\n    this.time = this.webForm.value.time;\r\n\r\n\r\n    const updatedWeb: Event = {\r\n      name: this.name,\r\n      orgId: this.uid,\r\n      description: this.description,\r\n      address: this.address,\r\n      city: this.city,\r\n      state: this.state,\r\n      time: this.time\r\n    };\r\n    this.eventService.updateEvent(this.wid, updatedWeb)\r\n      .subscribe(\r\n        (event: Event) => {\r\n          this.router.navigate(['user', this.uid, 'event']);\r\n        }\r\n      );\r\n  }\r\n\r\n  remove() {\r\n    this.eventService.deleteEvent(this.wid)\r\n      .subscribe(\r\n        (events: Event[]) => {\r\n          this.router.navigate(['user', this.uid, 'event']);\r\n    }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activeRouter.params.subscribe(params => {\r\n      this.uid = params['uid'];\r\n      this.wid = params['wid'];\r\n      this.eventService.findEventsByUser(this.uid)\r\n        .subscribe(\r\n          (events: Event[]) => {\r\n            this.events = events;\r\n            this.eventService.findEventById(this.wid)\r\n              .subscribe(\r\n                (event: Event) => {\r\n                  this.event = event;\r\n                  this.name = this.event.name;\r\n                  this.description = this.event.description;\r\n                  this.address = this.event.address;\r\n                  this.city = this.event.city;\r\n                  this.state = this.event.state;\r\n                  this.time = this.event.time;\r\n                }\r\n              );\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/event/event-edit/event-edit.component.ts","module.exports = \".sw-nav-blue {\\r\\n  background-color: #337ab7;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-list/event-list.component.css\n// module id = ./src/app/components/event/event-list/event-list.component.css\n// module chunks = main","module.exports = \"<!-- top navbar-->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <p class=\\\"navbar-text pull-left\\\">\\r\\n      <a routerLink=\\\"/user\\\"\\r\\n         class=\\\"navbar-link sw-text-white\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\r\\n      </a>\\r\\n    </p>\\r\\n    <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n       class=\\\"pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Events of {{org.organization}}</b>\\r\\n    </a>\\r\\n    <button routerLink=\\\"/user/{{uid}}/event/new\\\"\\r\\n       class=\\\"btn btn-xs sw-button-transparent navbar-link navbar-text pull-right sw-icon-padding\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-plus sw-text-white\\\"></span>\\r\\n    </button>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<!--events list-->\\r\\n<div  class=\\\"container-fluid\\\">\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item sw-borderless\\\"\\r\\n        *ngFor=\\\"let event of events\\\">\\r\\n      <a class=\\\"sw-link\\\"\\r\\n         routerLink=\\\"/user/{{uid}}/event/{{event._id}}/detail\\\">{{event.name}}</a>\\r\\n      <a routerLink=\\\"/user/{{uid}}/event/{{event._id}}\\\"\\r\\n         *ngIf=\\\"user.role === 'organization'\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-cog pull-right\\\"></span>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/user\\\" class=\\\"navbar-text pull-right\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-user sw-icon-padding sw-text-white\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-list/event-list.component.html\n// module id = ./src/app/components/event/event-list/event-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute} from '@angular/router';\r\nimport { EventService} from '../../../services/event.service.client';\r\nimport { Event } from '../../../models/event.model.client';\r\nimport {SharedService} from '../../../services/shared.service.client';\r\nimport {UserService} from '../../../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-event-list',\r\n  templateUrl: './event-list.component.html',\r\n  styleUrls: ['./event-list.component.css']\r\n})\r\nexport class EventListComponent implements OnInit {\r\n\r\n  uid: String;\r\n  events: Event[];\r\n  user: any;\r\n  org: any= {};\r\n  constructor(private eventService: EventService, private router: ActivatedRoute,\r\n              private sharedService: SharedService, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.router.params.subscribe(params => {\r\n      this.uid = params['uid'];\r\n      this.user = this.sharedService.user;\r\n      this.eventService.findEventsByUser(this.uid)\r\n        .subscribe(\r\n          (events: Event[]) => {\r\n            this.events = events;\r\n            this.userService.findUserById(this.uid)\r\n              .subscribe(\r\n                (org: any) => {\r\n                  this.org = org;\r\n                }\r\n              );\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/event/event-list/event-list.component.ts","module.exports = \".sw-nav-blue {\\r\\n  background-color: #337ab7;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-new/event-new.component.css\n// module id = ./src/app/components/event/event-new/event-new.component.css\n// module chunks = main","module.exports = \"<!-- top navbar-->\\r\\n<nav class=\\\"navbar navbar-fixed-top navbar-inverse\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 hidden-xs\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <p class=\\\"navbar-text pull-left\\\">\\r\\n          <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n             class=\\\"navbar-link sw-text-white\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\r\\n          </a>\\r\\n        </p>\\r\\n        <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n           class=\\\"pull-left navbar-brand thick\\\">\\r\\n          <b class=\\\"sw-text-white\\\">Events</b>\\r\\n        </a>\\r\\n        <a routerLink=\\\"/user/{{uid}}/event/new\\\"\\r\\n           class=\\\"navbar-link navbar-text pull-right sw-icon-padding\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-plus sw-text-white\\\"></span>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12 col-sm-8 pull-right\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <a routerLink=\\\"/user/{{uid}}/event/new\\\"\\r\\n           class=\\\"pull-left navbar-brand thick\\\">\\r\\n          <b class=\\\"sw-text-white\\\">New Event</b>\\r\\n        </a>\\r\\n        <button type=\\\"submit\\\"\\r\\n                [disabled]=\\\"!f.valid\\\"\\r\\n                form=\\\"webForm\\\"\\r\\n                class=\\\"btn btn-xs navbar-link navbar-text pull-right sw-icon-padding sw-button-transparent\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-ok sw-text-white\\\"></span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<!--left events-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 hidden-xs\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item sw-borderless\\\"\\r\\n            *ngFor=\\\"let event of events\\\">\\r\\n          <a class=\\\"sw-link\\\"\\r\\n             routerLink=\\\"/user/{{uid}}/event/{{event._id}}/page\\\">{{event.name}}</a>\\r\\n          <a routerLink=\\\"/user/{{uid}}/event/{{event._id}}\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-cog pull-right\\\"></span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <!--right editor-->\\r\\n    <div class=\\\"col-sm-8 col-xs-12\\\">\\r\\n      <form (ngSubmit)=\\\"create()\\\"\\r\\n            #f =\\\"ngForm\\\"\\r\\n            id=\\\"webForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"name\\\"\\r\\n                 placeholder=\\\"Name\\\"\\r\\n                 name=\\\"name\\\"\\r\\n                 required\\r\\n                 ngModel\\r\\n                 #name=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <span class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"!name.valid && name.touched\\\">Name can't be empty!</span>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"description\\\">Event Description</label>\\r\\n          <textarea id=\\\"description\\\"\\r\\n                    rows=\\\"5\\\"\\r\\n                    name=\\\"description\\\"\\r\\n                    placeholder=\\\"Description\\\"\\r\\n                    ngModel\\r\\n                    #description=\\\"ngModel\\\"\\r\\n                    class=\\\"form-control\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"address\\\">Street</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"address\\\"\\r\\n                 name=\\\"address\\\"\\r\\n                 placeholder=\\\"Address of the event\\\"\\r\\n                 ngModel\\r\\n                 #address=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"city\\\">City</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"city\\\"\\r\\n                   name=\\\"city\\\"\\r\\n                   placeholder=\\\"City of event\\\"\\r\\n                   ngModel\\r\\n                   #city=\\\"ngModel\\\"\\r\\n                   class=\\\"form-control\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"state\\\"\\r\\n                   name=\\\"state\\\"\\r\\n                   placeholder=\\\"state of the event\\\"\\r\\n                   ngModel\\r\\n                   #state=\\\"ngModel\\\"\\r\\n                   class=\\\"form-control\\\"/>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"time\\\">Event Time</label>\\r\\n          <input type=\\\"datetime-local\\\"\\r\\n                 id=\\\"time\\\"\\r\\n                 name=\\\"time\\\"\\r\\n                 placeholder=\\\"Event Time\\\"\\r\\n                 ngModel\\r\\n                 #time=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div>\\r\\n          <a routerLink=\\\"/user/{{uid}}/event\\\"\\r\\n             class=\\\"btn btn-warning btn-block\\\">Cancel</a>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/user\\\" class=\\\"navbar-text pull-right\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-user sw-icon-padding sw-text-white\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/event/event-new/event-new.component.html\n// module id = ./src/app/components/event/event-new/event-new.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute} from '@angular/router';\r\nimport { EventService} from '../../../services/event.service.client';\r\nimport { Event } from '../../../models/event.model.client';\r\nimport { NgForm } from '@angular/forms';\r\nimport DateTimeFormat = Intl.DateTimeFormat;\r\n\r\n@Component({\r\n  selector: 'app-event-new',\r\n  templateUrl: './event-new.component.html',\r\n  styleUrls: ['./event-new.component.css']\r\n})\r\nexport class EventNewComponent implements OnInit {\r\n\r\n  @ViewChild('f') webForm: NgForm;\r\n\r\n  uid: String;\r\n  events: Event[];\r\n  name: String;\r\n  description: String;\r\n  address: String;\r\n  city: String;\r\n  state: String;\r\n  time: DateTimeFormat;\r\n\r\n  constructor(private eventService: EventService,\r\n              private activatedRoute: ActivatedRoute, private router: Router) { }\r\n\r\n  create() {\r\n    this.name = this.webForm.value.name;\r\n    this.description = this.webForm.value.description;\r\n    this.address = this.webForm.value.address;\r\n    this.city = this.webForm.value.city;\r\n    this.state = this.webForm.value.state;\r\n    this.time = this.webForm.value.time;\r\n\r\n\r\n    const newEvent: Event = {\r\n      name: this.name,\r\n      orgId: this.uid,\r\n      description: this.description,\r\n      address: this.address,\r\n      city: this.city,\r\n      state: this.state,\r\n      time: this.time\r\n    };\r\n    this.eventService.createEvent(this.uid, newEvent)\r\n      .subscribe(\r\n        (events: Event[]) => {\r\n          this.router.navigate(['user', this.uid, 'event']);\r\n        }\r\n      );\r\n  }\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.uid = params['uid'];\r\n      this.eventService.findEventsByUser(this.uid)\r\n        .subscribe(\r\n          (events: Event[]) => {\r\n            this.events = events;\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/event/event-new/event-new.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = ./src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/\\\" class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Athlete</b>\\r\\n    </a>\\r\\n    <p class=\\\"navbar-text pull-right\\\">\\r\\n      <button\\r\\n        routerLink=\\\"/login\\\"\\r\\n        *ngIf=\\\"!login\\\"\\r\\n        class=\\\"btn btn-xs navbar-link sw-button-transparent\\\"\\r\\n      >\\r\\n        <b>Login</b>\\r\\n      </button>\\r\\n      <button\\r\\n        routerLink=\\\"/choose\\\"\\r\\n        *ngIf=\\\"!login\\\"\\r\\n        class=\\\"btn btn-xs navbar-link sw-button-transparent\\\"\\r\\n      >\\r\\n        <b>Sign up</b>\\r\\n      </button>\\r\\n      <button\\r\\n        routerLink=\\\"/user\\\"\\r\\n        *ngIf=\\\"login\\\"\\r\\n        class=\\\"btn btn-xs navbar-link sw-button-transparent glyphicon glyphicon-user sw-icon-padding sw-text-white\\\"\\r\\n      ></button>\\r\\n    </p>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div id=\\\"myCarousel\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\r\\n    <!-- Indicators -->\\r\\n    <ol class=\\\"carousel-indicators\\\">\\r\\n      <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\r\\n      <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"1\\\"></li>\\r\\n      <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"2\\\"></li>\\r\\n    </ol>\\r\\n\\r\\n    <!-- Wrapper for slides -->\\r\\n    <div class=\\\"carousel-inner\\\">\\r\\n      <div class=\\\"item active\\\">\\r\\n        <img\\r\\n          class=\\\"sw-img-slide\\\"\\r\\n          src=\\\"https://imagesvc.meredithcorp.io/v3/mm/image?q=85&c=sc&poi=face&w=2000&h=1047&url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F35%2F2020%2F03%2Ffb-average-marathon-time-2000.jpg\\\"\\r\\n          alt=\\\"Los Angeles\\\"\\r\\n        />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"item\\\">\\r\\n        <img\\r\\n          class=\\\"item active\\\"\\r\\n          src=\\\"https://media.wired.com/photos/59c7ae866d668e01c65b1046/2:1/w_2500,c_limit/Berlin-FA-852825046.jpg\\\"\\r\\n          alt=\\\"Chicago\\\"\\r\\n        />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"item\\\">\\r\\n        <img\\r\\n          class=\\\"item active\\\"\\r\\n          src=\\\"https://eversport.tv/sites/default/files/marathon-frankfurt-.jpg\\\"\\r\\n          alt=\\\"New york\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Left and right controls -->\\r\\n    <a class=\\\"left carousel-control\\\" href=\\\"#myCarousel\\\" data-slide=\\\"prev\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\r\\n      <span class=\\\"sr-only\\\">Previous</span>\\r\\n    </a>\\r\\n    <a class=\\\"right carousel-control\\\" href=\\\"#myCarousel\\\" data-slide=\\\"next\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\r\\n      <span class=\\\"sr-only\\\">Next</span>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <input\\r\\n      [(ngModel)]=\\\"key\\\"\\r\\n      type=\\\"text\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Search events\\\"\\r\\n    />\\r\\n    <span class=\\\"input-group-btn\\\">\\r\\n      <a (click)=\\\"searchEvents()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-search\\\"></span>\\r\\n      </a>\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"events\\\">\\r\\n    <h4>Searching Results for '{{ key }}'</h4>\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Organization</th>\\r\\n            <th>Post time</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let event of events\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <a\\r\\n                (click)=\\\"selectEvent(event._id)\\\"\\r\\n                class=\\\"btn sw-button-transparent sw-link sw-button-transparent\\\"\\r\\n                >{{ event.name }}</a\\r\\n              >\\r\\n            </td>\\r\\n            <td>\\r\\n              <a\\r\\n                class=\\\"btn sw-button-transparent sw-link sw-button-transparent\\\"\\r\\n                data-toggle=\\\"modal\\\"\\r\\n                data-target=\\\"#myModal\\\"\\r\\n                (click)=\\\"selectOrg(event.orgId._id)\\\"\\r\\n                >{{ event.orgId.organization }}</a\\r\\n              >\\r\\n            </td>\\r\\n            <td>{{ event.dateCreated }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-6\\\">\\r\\n      <div class=\\\"col-xs-2\\\"></div>\\r\\n      <div class=\\\"col-xs-10\\\">\\r\\n        <h3>Weather Tracking</h3>\\r\\n      </div>\\r\\n      <form (ngSubmit)=\\\"searchWeather()\\\" #f=\\\"ngForm\\\">\\r\\n        <div>\\r\\n          <div class=\\\"form-group col-xs-6\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              id=\\\"state\\\"\\r\\n              name=\\\"state\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              placeholder=\\\"Specify the state\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              #state=\\\"ngModel\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-xs-6\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              id=\\\"city\\\"\\r\\n              name=\\\"city\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              placeholder=\\\"Specify the city\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              #city=\\\"ngModel\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <button\\r\\n          class=\\\"btn btn-success btn-block\\\"\\r\\n          type=\\\"submit\\\"\\r\\n          [disabled]=\\\"!f.valid\\\"\\r\\n        >\\r\\n          Check\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-6\\\">\\r\\n      <div class=\\\"col-xs-4\\\"></div>\\r\\n      <div class=\\\"col-xs-8\\\">\\r\\n        <img src=\\\"{{ result.icon_url }}\\\" />\\r\\n      </div>\\r\\n      <hr />\\r\\n      <hr />\\r\\n      <div class=\\\"panel panel-default\\\" *ngIf=\\\"result !== ''\\\">\\r\\n        <div class=\\\"panel-body\\\">Weather: {{ result.weather }}</div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          Temprature: {{ result.temperature_string }}\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">Feels like: {{ result.feelslike_string }}</div>\\r\\n        <div class=\\\"panel-body\\\">Wind: {{ result.wind_string }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr />\\r\\n  <div *ngIf=\\\"user.role === 'admin'\\\">\\r\\n    <button\\r\\n      class=\\\"btn btn-warning btn-block\\\"\\r\\n      data-toggle=\\\"modal\\\"\\r\\n      data-target=\\\"#userModal\\\"\\r\\n      (click)=\\\"list('user')\\\"\\r\\n    >\\r\\n      All Users\\r\\n    </button>\\r\\n    <button\\r\\n      class=\\\"btn btn-warning btn-block\\\"\\r\\n      data-toggle=\\\"modal\\\"\\r\\n      data-target=\\\"#eventModal\\\"\\r\\n      (click)=\\\"list('event')\\\"\\r\\n    >\\r\\n      All Events\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- Modal -->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <!-- Modal content-->\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\r\\n            &times;\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">{{ org.organization }}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <p>{{ org.intro }}</p>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button\\r\\n            *ngIf=\\\"!following && login\\\"\\r\\n            (click)=\\\"follow(user._id, org._id)\\\"\\r\\n            class=\\\"btn btn-lg sw-text-yellow pull-left sw-button-transparent glyphicon glyphicon-star-empty sw-button-transparent\\\"\\r\\n          ></button>\\r\\n          <button\\r\\n            *ngIf=\\\"following && login && user.role !== 'organization'\\\"\\r\\n            class=\\\"btn btn-lg sw-text-yellow pull-left sw-button-transparent glyphicon glyphicon-star sw-button-transparent\\\"\\r\\n          ></button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">\\r\\n            Close\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Modal -->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"userModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <!-- Modal content-->\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\r\\n            &times;\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">All Users</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Role</th>\\r\\n                <th>Date Created</th>\\r\\n                <th></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let data of userData\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <a\\r\\n                    (click)=\\\"selectUser(data._id)\\\"\\r\\n                    class=\\\"btn sw-button-transparent sw-link sw-button-transparent\\\"\\r\\n                    >{{ data.username }}</a\\r\\n                  >\\r\\n                </td>\\r\\n                <td>{{ data.role }}</td>\\r\\n                <td>{{ data.dateCreated }}</td>\\r\\n                <td>\\r\\n                  <button class=\\\"btn pull-right sw-button-transparent\\\">\\r\\n                    <span\\r\\n                      class=\\\"glyphicon glyphicon-remove sw-text-red\\\"\\r\\n                      (click)=\\\"deleteUser(data._id)\\\"\\r\\n                    ></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button\\r\\n            routerLink=\\\"/choose\\\"\\r\\n            class=\\\"btn btn-block\\\"\\r\\n            data-dismiss=\\\"modal\\\"\\r\\n          >\\r\\n            Create New User\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">\\r\\n            Close\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Modal -->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"eventModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <!-- Modal content-->\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\r\\n            &times;\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">All Events</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Date Created</th>\\r\\n                <th></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let data of eventData\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <a\\r\\n                    (click)=\\\"selectEvent(data._id)\\\"\\r\\n                    class=\\\"btn sw-button-transparent sw-link sw-button-transparent\\\"\\r\\n                    >{{ data.name }}</a\\r\\n                  >\\r\\n                </td>\\r\\n                <td>{{ data.dateCreated }}</td>\\r\\n                <td>\\r\\n                  <button class=\\\"btn pull-right sw-button-transparent\\\">\\r\\n                    <span\\r\\n                      class=\\\"glyphicon glyphicon-remove sw-text-red\\\"\\r\\n                      (click)=\\\"deleteEvent(data._id)\\\"\\r\\n                    ></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">\\r\\n            Close\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = ./src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { HomeService } from '../../services/home.service.client';\r\nimport { SharedService } from '../../services/shared.service.client';\r\nimport { UserService } from '../../services/user.service.client';\r\nimport {EventService} from '../../services/event.service.client';\r\nimport {Event} from '../../models/event.model.client';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../../models/user.model.client';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  @ViewChild('f') homeForm: NgForm;\r\n\r\n  event: Event;\r\n  state: String;\r\n  city: String;\r\n  following: boolean;\r\n  login: boolean;\r\n  result: Object = '';\r\n  role: String;\r\n  key: String;\r\n  org: any = {};\r\n  user: any = {\r\n    role: ''\r\n  };\r\n  events: [Event];\r\n  userData: [User];\r\n  eventData: [Event];\r\n\r\n  constructor(private homeService: HomeService, private sharedService: SharedService,\r\n              private userService: UserService, private eventService: EventService, private router: Router) { }\r\n\r\n  searchWeather() {\r\n    this.city = this.homeForm.value.city;\r\n    this.state = this.homeForm.value.state;\r\n    this.homeService.searchWeather(this.city, this.state)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.result = data.current_observation;\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteUser(uid) {\r\n    this.userService.deleteUser(uid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.list('user');\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteEvent(wid) {\r\n    this.eventService.deleteEvent(wid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.list('event');\r\n        }\r\n      );\r\n  }\r\n\r\n  list(role) {\r\n    if (role === 'user') {\r\n      this.userService.findAll()\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.userData = data;\r\n          }\r\n        );\r\n    } else {\r\n      this.eventService.findAll()\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.eventData = data;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  searchEvents() {\r\n    this.eventService.searchEvent(this.key)\r\n      .subscribe(\r\n        (events: any) => {\r\n          this.events = events;\r\n        }\r\n      );\r\n  }\r\n\r\n  selectEvent(id) {\r\n    this.eventService.findEventById(id)\r\n      .subscribe(\r\n        (event: any) => {\r\n          this.event = event;\r\n          this.router.navigate(['user', event.orgId, 'event', event._id, 'detail']);\r\n        }\r\n      );\r\n  }\r\n\r\n  follow(uid, oid) {\r\n    this.userService.follow(uid, oid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.following = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  loggedIn() {\r\n    this.userService.checkLogin()\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.login = data;\r\n          this.user = this.sharedService.user\r\n        }\r\n      );\r\n  }\r\n\r\n  unfollow(uid, oid) {\r\n    this.userService.unfollow(uid, oid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.following = false;\r\n        }\r\n      );\r\n  }\r\n  selectOrg(orgId) {\r\n    this.userService.findUserById(orgId)\r\n      .subscribe(\r\n        (org: User) => {\r\n          this.org = org;\r\n        }\r\n      );\r\n  }\r\n\r\n  checkFollow(uid, oid) {\r\n    this.userService.checkFollow(uid, oid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          console.log(data);\r\n          if (data) {\r\n            this.following = true;\r\n          } else {\r\n            this.following = false;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loggedIn();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/choose/choose.component.css\n// module id = ./src/app/components/user/choose/choose.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Athelete</b>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Home</b>\\r\\n    </a>\\r\\n    <p class=\\\"navbar-text pull-right\\\">\\r\\n      <button routerLink=\\\"/login\\\"\\r\\n              *ngIf=\\\"user === ''\\\"\\r\\n              class=\\\"btn btn-xs navbar-link sw-button-transparent\\\">\\r\\n        <b>Login</b>\\r\\n      </button>\\r\\n    </p>\\r\\n  </div>\\r\\n</nav>\\r\\n<div class=\\\"container\\\">\\r\\n  <hr/>\\r\\n  <div class=\\\"raw\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <p>For many runners, the desire to do a marathon is about personal challenge. You might want to test your limits or prove that you can go the distance. Perhaps a friend has talked you into it. Maybe you'd like to lose weight, get healthier or raise awareness for a charity.</p>\\r\\n      <button *ngIf=\\\"user.role !== 'admin'\\\" (click)=\\\"runnerRegister()\\\" class=\\\"btn btn-info btn-lg btn-block\\\">Register as runner</button>\\r\\n      <button *ngIf=\\\"user.role === 'admin'\\\" (click)=\\\"runnerRegister()\\\" class=\\\"btn btn-success btn-lg btn-block\\\">Create new runner</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <p>Marathon volunteers represent the best that a city has to offer: They’re helpful, enthusiastic, friendly, and proud of our amazing city. Fulfilling a volunteer opportunity on race day is a great way to pay it forward for your future marathon or to show your thanks for a past race.</p>\\r\\n      <button *ngIf=\\\"user.role !== 'admin'\\\" (click)=\\\"volunteerRegister()\\\" class=\\\"btn btn-info btn-lg btn-block\\\">Register as volunteer</button>\\r\\n      <button *ngIf=\\\"user.role === 'admin'\\\" (click)=\\\"volunteerRegister()\\\" class=\\\"btn btn-success btn-lg btn-block\\\">Create new volunteer</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <p>A successfully planned and executed marathon can raise public awareness, and money, for a worthy cause. The logistics of planning a marathon is vary depending on the type of event. Many of the details involved in planning and hosting popular types of marathons.</p>\\r\\n      <button *ngIf=\\\"user.role !== 'admin'\\\" (click)=\\\"organizationRegister()\\\" class=\\\"btn btn-info btn-lg btn-block\\\">Register as organization</button>\\r\\n      <button *ngIf=\\\"user.role === 'admin'\\\" (click)=\\\"organizationRegister()\\\" class=\\\"btn btn-success btn-lg btn-block\\\">Create new organization</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/choose/choose.component.html\n// module id = ./src/app/components/user/choose/choose.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {SharedService} from '../../../services/shared.service.client';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-choose',\r\n  templateUrl: './choose.component.html',\r\n  styleUrls: ['./choose.component.css']\r\n})\r\nexport class ChooseComponent implements OnInit {\r\n\r\n  constructor(private sharedService: SharedService, private router: Router) { }\r\n\r\n  user: any;\r\n\r\n  runnerRegister() {\r\n    this.sharedService.role = 'runner';\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  volunteerRegister() {\r\n    this.sharedService.role = 'volunteer';\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  organizationRegister() {\r\n    this.sharedService.role = 'organization';\r\n    this.router.navigate(['/register']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = this.sharedService.user;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/choose/choose.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.css\n// module id = ./src/app/components/user/login/login.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Athelete</b>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Home</b>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div *ngIf=\\\"errorFlag\\\"\\r\\n       class=\\\"alert alert-danger\\\" >\\r\\n    Invalid username or password!\\r\\n  </div>\\r\\n  <h1>Login</h1>\\r\\n  <form (ngSubmit)=\\\"login()\\\"\\r\\n        #f =\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\"\\r\\n             id=\\\"username\\\"\\r\\n             name=\\\"username\\\"\\r\\n             required\\r\\n             ngModel\\r\\n             placeholder=\\\"username\\\"\\r\\n             class=\\\"form-control\\\"\\r\\n             #username=\\\"ngModel\\\"/>\\r\\n    </div>\\r\\n    <span class=\\\"help-block\\\"\\r\\n          *ngIf=\\\"!username.valid && username.touched\\\">Please enter username!</span>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"password\\\"\\r\\n             id=\\\"password\\\"\\r\\n             name=\\\"password\\\"\\r\\n             required\\r\\n             placeholder=\\\"password\\\"\\r\\n             ngModel\\r\\n             #password=\\\"ngModel\\\"\\r\\n             class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n    <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\">Please enter password!</span>\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n       type=\\\"submit\\\"\\r\\n       [disabled]=\\\"!f.valid\\\">Login</button>\\r\\n    <a routerLink=\\\"/facebook/login\\\" class=\\\"btn btn-primary btn-block\\\">\\r\\n      <span class=\\\"fa fa-facebook\\\"></span>\\r\\n      Facebook\\r\\n    </a>\\r\\n    <button class=\\\"btn btn-success btn-block\\\" routerLink=\\\"/choose\\\">Register</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.html\n// module id = ./src/app/components/user/login/login.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../../services/user.service.client';\r\nimport { NgForm } from '@angular/forms';\r\nimport { SharedService } from '../../../services/shared.service.client';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @ViewChild('f') loginForm: NgForm;\r\n\r\n  username: String;\r\n  password: String;\r\n  errorFlag: boolean;\r\n\r\n  constructor(private sharedService: SharedService, private userService: UserService, private router: Router) { }\r\n\r\n  login() {\r\n\r\n    this.username = this.loginForm.value.username;\r\n    this.password = this.loginForm.value.password;\r\n\r\n    this.userService.login(this.username, this.password)\r\n      .subscribe(\r\n        (user) => {\r\n          if (!user) {\r\n            this.errorFlag = true;\r\n          } else {\r\n          this.errorFlag = false;\r\n          this.sharedService.user = user;\r\n          this.sharedService.role = user.role;\r\n          this.router.navigate(['/']);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.errorFlag = true;\r\n          }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/detail/detail.component.css\n// module id = ./src/app/components/user/profile/detail/detail.component.css\n// module chunks = main","module.exports = \"\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Home</b>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/user\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Profile</b>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-2\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-8\\\">\\r\\n      <form (ngSubmit)=\\\"update()\\\"\\r\\n            #f =\\\"ngForm\\\"\\r\\n            id=\\\"profileForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"username\\\">Username</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"username\\\"\\r\\n                 name=\\\"username\\\"\\r\\n                 readonly\\r\\n                 #username=\\\"ngModel\\\"\\r\\n                 ngModel=\\\"{{user.username}}\\\">\\r\\n        </div>\\r\\n        <span class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"!username.valid && username.touched\\\">Username can't be empty!</span>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email address</label>\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"email\\\"\\r\\n                 name=\\\"email\\\"\\r\\n                 email\\r\\n                 readonly\\r\\n                 ngModel=\\\"{{user.email}}\\\"\\r\\n                 #email=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"firstName\\\">First Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"firstName\\\"\\r\\n                 name=\\\"firstName\\\"\\r\\n                 readonly\\r\\n                 ngModel=\\\"{{user.firstName}}\\\"\\r\\n                 #firstName=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"lastName\\\"\\r\\n                 name=\\\"lastName\\\"\\r\\n                 readonly\\r\\n                 ngModel=\\\"{{user.lastName}}\\\"\\r\\n                 #lastName=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"gender\\\">Gender</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"gender\\\"\\r\\n                 readonly\\r\\n                 name=\\\"gender\\\"\\r\\n                 [(ngModel)]=\\\"user.gender\\\"\\r\\n                 #gender=\\\"ngModel\\\"\\r\\n                 class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"intro\\\">Short Introduction</label>\\r\\n          <textarea type=\\\"text\\\"\\r\\n                    id=\\\"intro\\\"\\r\\n                    name=\\\"intro\\\"\\r\\n                    ngModel=\\\"{{user.intro}}\\\"\\r\\n                    #intro=\\\"ngModel\\\"\\r\\n                    rows=\\\"3\\\"\\r\\n                    readonly\\r\\n                    class=\\\"form-control\\\"></textarea>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-2\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/user\\\"\\r\\n       class=\\\"navbar-text pull-right\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-user sw-text-white\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/detail/detail.component.html\n// module id = ./src/app/components/user/profile/detail/detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {User} from '../../../../models/user.model.client';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {UserService} from '../../../../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.css']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n\r\n  uid: String;\r\n  user: User = {\r\n    _id: this.uid,\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    role: '',\r\n    gender: '',\r\n    intro: ''\r\n  };\r\n\r\n  constructor(private activeRouter: ActivatedRoute, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.activeRouter.params.subscribe(params => {\r\n      this.uid = params['uid'];\r\n      this.userService.findUserById(this.uid)\r\n        .subscribe(\r\n          (user: User) => {\r\n            this.user = user;\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/profile/detail/detail.component.ts","module.exports = \".sw-nav-blue {\\r\\n  background-color: #337ab7;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.css\n// module id = ./src/app/components/user/profile/profile.component.css\n// module chunks = main","module.exports = \"\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Home</b>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/user\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Profile</b>\\r\\n    </a>\\r\\n\\r\\n    <!--tick mark-->\\r\\n    <p class=\\\"navbar-text pull-right\\\">\\r\\n      <button type=\\\"submit\\\"\\r\\n              [disabled]=\\\"!f.valid\\\"\\r\\n              form=\\\"profileForm\\\"\\r\\n              class=\\\"btn btn-xs navbar-link sw-button-transparent\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-ok sw-text-white\\\"></span>\\r\\n      </button>\\r\\n    </p>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-2\\\">\\r\\n      <div class=\\\"panel panel-info\\\" *ngIf=\\\"user.role !== 'organization'\\\">\\r\\n        <div class = \\\"panel-heading\\\">\\r\\n          <h3 class = \\\"panel-title\\\">Following Organization</h3>\\r\\n        </div>\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item sw-borderless\\\"\\r\\n              *ngFor=\\\"let org of orgs\\\">\\r\\n            <button class=\\\"btn sw-button-transparent\\\" routerLink=\\\"/user/{{org._id}}/event\\\">{{org.organization}}</button>\\r\\n            <button class=\\\"btn pull-right sw-button-transparent\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-star sw-text-yellow\\\"\\r\\n                    (click)=\\\"unfollow(uid, org._id)\\\"></span>\\r\\n            </button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-8\\\">\\r\\n      <div *ngIf=\\\"usernameTaken\\\"\\r\\n           class=\\\"alert alert-danger\\\" >\\r\\n        Username was taken!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"submitSuccess\\\"\\r\\n           class=\\\"alert alert-success\\\" >\\r\\n        Submit successfully!\\r\\n      </div>\\r\\n      <form (ngSubmit)=\\\"update()\\\"\\r\\n            #f =\\\"ngForm\\\"\\r\\n            id=\\\"profileForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"username\\\">Username</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"username\\\"\\r\\n                 name=\\\"username\\\"\\r\\n                 required\\r\\n                 #username=\\\"ngModel\\\"\\r\\n                 ngModel=\\\"{{user.username}}\\\"\\r\\n                 placeholder=\\\"username\\\">\\r\\n        </div>\\r\\n        <span class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"!username.valid && username.touched\\\">Username can't be empty!</span>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email address</label>\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"email\\\"\\r\\n                 name=\\\"email\\\"\\r\\n                 email\\r\\n                 ngModel=\\\"{{user.email}}\\\"\\r\\n                 #email=\\\"ngModel\\\"\\r\\n                 placeholder=\\\"alice.wonderland@unicorn.com\\\">\\r\\n        </div>\\r\\n        <span class=\\\"help-block\\\"\\r\\n              *ngIf=\\\"!email.valid && email.touched\\\">Invalid email!</span>\\r\\n        <div class=\\\"form-group\\\"\\r\\n             *ngIf=\\\"role !=='organization'\\\">\\r\\n          <label for=\\\"firstName\\\">First Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"firstName\\\"\\r\\n                 name=\\\"firstName\\\"\\r\\n                 ngModel=\\\"{{user.firstName}}\\\"\\r\\n                 #firstName=\\\"ngModel\\\"\\r\\n                 placeholder=\\\"Alice\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"\\r\\n             *ngIf=\\\"role !=='organization'\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"lastName\\\"\\r\\n                 name=\\\"lastName\\\"\\r\\n                 ngModel=\\\"{{user.lastName}}\\\"\\r\\n                 #lastName=\\\"ngModel\\\"\\r\\n                 placeholder=\\\"Wonderland\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"\\r\\n             *ngIf=\\\"role !=='organization'\\\">\\r\\n          <label for=\\\"gender\\\">Gender</label>\\r\\n          <select type=\\\"text\\\"\\r\\n                  id=\\\"gender\\\"\\r\\n                  name=\\\"gender\\\"\\r\\n                  [(ngModel)]=\\\"user.gender\\\"\\r\\n                  #gender=\\\"ngModel\\\"\\r\\n                  placeholder=\\\"Gender\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n            <option value='male'>Male</option>\\r\\n            <option value='female'>Female</option>\\r\\n            <option value='secret'>Not Specified</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"\\r\\n             *ngIf=\\\"role ==='organization'\\\">\\r\\n          <label for=\\\"organization\\\">Organization Name</label>\\r\\n          <input type=\\\"text\\\"\\r\\n                 id=\\\"organization\\\"\\r\\n                 name=\\\"organization\\\"\\r\\n                 ngModel=\\\"{{user.organization}}\\\"\\r\\n                 #organization=\\\"ngModel\\\"\\r\\n                 placeholder=\\\"Organization Name\\\"\\r\\n                 class=\\\"form-control\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"intro\\\">Short Introduction</label>\\r\\n          <textarea type=\\\"text\\\"\\r\\n                    id=\\\"intro\\\"\\r\\n                    name=\\\"intro\\\"\\r\\n                    ngModel=\\\"{{user.intro}}\\\"\\r\\n                    #intro=\\\"ngModel\\\"\\r\\n                    placeholder=\\\"Short introduction\\\"\\r\\n                    rows=\\\"3\\\"\\r\\n                    class=\\\"form-control\\\"></textarea>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n      <a class=\\\"btn btn-primary btn-block\\\"\\r\\n         *ngIf=\\\"role === 'organization'\\\"\\r\\n         routerLink=\\\"/user/{{uid}}/event\\\">Events</a>\\r\\n      <a class=\\\"btn btn-danger btn-block\\\"\\r\\n         (click)=\\\"logout()\\\">Logout</a>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-2\\\">\\r\\n      <div class=\\\"panel panel-info\\\" *ngIf=\\\"user.role !== 'organization'\\\">\\r\\n        <div class = \\\"panel-heading\\\">\\r\\n          <h3 class = \\\"panel-title\\\">Registered Events</h3>\\r\\n        </div>\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item sw-borderless\\\"\\r\\n              *ngFor=\\\"let eve of eves\\\">\\r\\n            <button class=\\\"btn sw-button-transparent\\\" routerLink=\\\"/user/{{eve.orgId}}/event/{{eve._id}}/detail\\\">{{eve.name}}</button>\\r\\n            <button class=\\\"btn pull-right sw-button-transparent\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-remove sw-text-red\\\"\\r\\n                    (click)=\\\"cancel(uid, eve._id)\\\"></span>\\r\\n            </button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/user\\\"\\r\\n       class=\\\"navbar-text pull-right\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-user sw-text-white\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.html\n// module id = ./src/app/components/user/profile/profile.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UserService} from '../../../services/user.service.client';\r\nimport {User} from '../../../models/user.model.client';\r\nimport {NgForm} from '@angular/forms';\r\nimport {SharedService} from '../../../services/shared.service.client';\r\nimport {EventService} from \"../../../services/event.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  @ViewChild('f') profileForm: NgForm;\r\n\r\n  uid: String;\r\n  username: String;\r\n  email: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  prevUsername: String;\r\n  usernameTaken: boolean;\r\n  submitSuccess: boolean;\r\n  role: String;\r\n  gender: String;\r\n  organization: String;\r\n  intro: String;\r\n  orgs: [User];\r\n  org: any;\r\n  eves: [Event];\r\n\r\n  user: User = {\r\n    _id: this.uid,\r\n    username: this.username,\r\n    password: '',\r\n    email: this.email,\r\n    firstName: this.firstName,\r\n    lastName: this.lastName,\r\n    role: this.role,\r\n    gender: this.gender,\r\n    organization: this.organization,\r\n    intro: this.intro\r\n  };\r\n  aUser: User;\r\n\r\n  constructor(private sharedService: SharedService, private userService: UserService,\r\n              private router: ActivatedRoute, private route: Router, private eventService: EventService) {\r\n  }\r\n\r\n  update() {\r\n    this.username = this.profileForm.value.username;\r\n    this.email = this.profileForm.value.email;\r\n    this.firstName = this.profileForm.value.firstName;\r\n    this.lastName = this.profileForm.value.lastName;\r\n    this.gender = this.profileForm.value.gender;\r\n    this.organization = this.profileForm.value.organization;\r\n    this.intro = this.profileForm.value.intro;\r\n\r\n    this.usernameTaken = false;\r\n    this.submitSuccess = false;\r\n\r\n    this.userService.findUserByUsername(this.username)\r\n      .subscribe(\r\n        (user: User) => {\r\n          this.aUser = user;\r\n          if (this.aUser !== null && this.username !== this.prevUsername) {\r\n            this.usernameTaken = true;\r\n          } else {\r\n            const updatedUser: User = {\r\n              username: this.username,\r\n              password: this.user.password,\r\n              firstName: this.firstName,\r\n              lastName: this.lastName,\r\n              email: this.email,\r\n              organization: this.organization,\r\n              role: this.role,\r\n              gender: this.gender,\r\n              intro: this.intro\r\n            };\r\n            this.userService.updateUser(this.uid, updatedUser)\r\n              .subscribe(\r\n                (newU: User) => {\r\n                  this.route.navigate(['/user']);\r\n                }\r\n              );\r\n            this.submitSuccess = true;\r\n            this.prevUsername = this.username;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  unfollow(uid, oid) {\r\n    this.userService.unfollow(uid, oid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.findOrgs();\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel(uid, wid) {\r\n    this.userService.cancel(uid, wid)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.findEvents();\r\n        }\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout()\r\n      .subscribe(\r\n        (status) => {\r\n          this.sharedService.user = '';\r\n          this.route.navigate(['/']);\r\n        }\r\n      );\r\n }\r\n\r\n findOrgs() {\r\n    this.userService.findFollowing(this.uid)\r\n      .subscribe(\r\n        (orgs: any) => {\r\n          this.orgs = orgs;\r\n          this.findEvents();\r\n        }\r\n      );\r\n }\r\n\r\n findEvents() {\r\n    this.eventService.findEvents(this.uid)\r\n      .subscribe(\r\n        (events: any) => {\r\n          console.log(events);\r\n          this.eves = events;\r\n        }\r\n      );\r\n }\r\n\r\n\r\n  ngOnInit() {\r\n    this.user = this.sharedService.user;\r\n    this.role = this.user.role;\r\n    this.uid = this.user._id;\r\n    this.username = this.user.username;\r\n    this.email = this.user.email;\r\n    this.firstName = this.user.firstName;\r\n    this.lastName = this.user.lastName;\r\n    this.prevUsername = this.username;\r\n    this.organization = this.user.organization;\r\n    this.gender = this.user.gender;\r\n    this.intro = this.user.intro;\r\n    this.org = {};\r\n    this.findOrgs();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/profile/profile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.css\n// module id = ./src/app/components/user/register/register.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Athelete</b>\\r\\n    </a>\\r\\n    <a routerLink=\\\"/\\\"\\r\\n       class=\\\"navbar-header pull-left navbar-brand thick\\\">\\r\\n      <b class=\\\"sw-text-white\\\">Home</b>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div *ngIf=\\\"usernameError\\\"\\r\\n       class=\\\"alert alert-danger\\\" >\\r\\n    Username was taken!\\r\\n  </div>\\r\\n  <div *ngIf=\\\"passwordError\\\"\\r\\n       class=\\\"alert alert-danger\\\" >\\r\\n    Two passwords are not match!\\r\\n  </div>\\r\\n  <h1>Register</h1>\\r\\n  <form (ngSubmit)=\\\"register()\\\"\\r\\n        #f =\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\"\\r\\n             id=\\\"username\\\"\\r\\n             name=\\\"username\\\"\\r\\n             required\\r\\n             ngModel\\r\\n             #username=\\\"ngModel\\\"\\r\\n             placeholder=\\\"username\\\"\\r\\n             class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n    <span class=\\\"help-block\\\"\\r\\n          *ngIf=\\\"!username.valid && username.touched\\\">Please enter username!</span>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"password\\\"\\r\\n             id=\\\"password\\\"\\r\\n             name=\\\"password\\\"\\r\\n             required\\r\\n             ngModel\\r\\n             #password=\\\"ngModel\\\"\\r\\n             placeholder=\\\"password\\\"\\r\\n             class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n    <span class=\\\"help-block\\\"\\r\\n          *ngIf=\\\"!password.valid && password.touched\\\">Please enter password!</span>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"password\\\"\\r\\n             id=\\\"verifyPassword\\\"\\r\\n             name=\\\"verifyPassword\\\"\\r\\n             required\\r\\n             ngModel\\r\\n             #verifyPassword=\\\"ngModel\\\"\\r\\n             placeholder=\\\"verify password\\\"\\r\\n             class=\\\"form-control\\\"/>\\r\\n    </div>\\r\\n    <span class=\\\"help-block\\\"\\r\\n          *ngIf=\\\"!verifyPassword.valid && verifyPassword.touched\\\">Please verify username!</span>\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n       type=\\\"submit\\\"\\r\\n       [disabled]=\\\"!f.valid\\\">Register</button>\\r\\n    <button class=\\\"btn btn-danger btn-block\\\"\\r\\n       routerLink=\\\"/choose\\\" >Cancel</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.html\n// module id = ./src/app/components/user/register/register.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {UserService} from '../../../services/user.service.client';\r\nimport {User} from '../../../models/user.model.client';\r\nimport {NgForm} from '@angular/forms';\r\nimport {SharedService} from '../../../services/shared.service.client';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  @ViewChild('f') registerForm: NgForm;\r\n\r\n  username: String;\r\n  password: String;\r\n  verifyPassword: String;\r\n  usernameError: boolean;\r\n  passwordError: boolean;\r\n\r\n  constructor(private sharedService: SharedService, private userService: UserService, private router: Router) { }\r\n\r\n  register() {\r\n\r\n    this.username = this.registerForm.value.username;\r\n    this.password = this.registerForm.value.password;\r\n    this.verifyPassword = this.registerForm.value.verifyPassword;\r\n\r\n    this.usernameError = false;\r\n    this.passwordError = false;\r\n\r\n    if (this.password !== this.verifyPassword) {\r\n      this.passwordError = true;\r\n    } else {\r\n      this.userService.register(this.username, this.password)\r\n        .subscribe(\r\n          (user: any) => {\r\n            this.sharedService.user = user;\r\n            this.router.navigate(['/']);\r\n          },\r\n          (error: any) => {\r\n            this.usernameError = true;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { UserService } from './user.service.client';\r\n\r\n@Injectable()\r\nexport class AuthenticationService implements CanActivate {\r\n  constructor (private userService: UserService) { }\r\n  canActivate() {\r\n    return this.userService.loggedIn();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/authentication.service.client.ts","import { Injectable } from '@angular/core';\r\nimport { Event } from '../models/event.model.client';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/Rx';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n  baseUrl = environment.baseUrl;\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  // adds the event parameter instance to the local events array. The new event's orgId is set to the userId parameter\r\n  createEvent(userId: String, event: Event) {\r\n    const url = this.baseUrl + '/api/user/' + userId + '/event';\r\n    return this.http.post(url, event)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  // retrieves the events in local events array whose orgId matches the parameter userId\r\n  findEventsByUser(userId: String) {\r\n    const url = this.baseUrl + '/api/user/' + userId + '/event';\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  // retrieves the event in local events array whose _id matches the eventId parameter\r\n  findEventById(eventId: String) {\r\n    const url = this.baseUrl + '/api/event/' + eventId;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  // updates the event in local events array whose _id matches the eventId parameter\r\n  updateEvent(eventId: String, event: Event) {\r\n    const url = this.baseUrl + '/api/event/' + eventId;\r\n    return this.http.put(url, event)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  // removes the event from local events array whose _id matches the eventId parameter\r\n  deleteEvent(eventId: String) {\r\n    const url = this.baseUrl + '/api/event/' + eventId;\r\n    return this.http.delete(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  searchEvent(key: String) {\r\n    const url = this.baseUrl + '/api/event/search/' + key;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  register(uid: String, wid: String) {\r\n    const url = this.baseUrl + '/api/event/' + uid + '/register/' + wid;\r\n    return this.http.put(url, null)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  findEvents(uid) {\r\n    const url = this.baseUrl + '/api/event/' + uid + '/findEvents';\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  findAll() {\r\n    const url = this.baseUrl + '/api/event/findAll';\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/event.service.client.ts","import { Http, Response } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class HomeService {\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  searchWeather(city: String, state: String) {\r\n    const url\r\n      = 'https://api.wunderground.com/api/5aef84f6a4fe075e/conditions/q/' + state + '/' + city + '.json';\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/home.service.client.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SharedService {\r\n   user: any = '';\r\n   role: String = '';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/shared.service.client.ts","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user.model.client';\r\nimport { Http, RequestOptions, Response } from '@angular/http';\r\nimport 'rxjs/Rx';\r\nimport { environment } from '../../environments/environment';\r\nimport {SharedService} from './shared.service.client';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  baseUrl = environment.baseUrl;\r\n\r\n  options = new RequestOptions();\r\n\r\n  constructor(private http: Http, private sharedService: SharedService, private router: Router) {}\r\n\r\n  register(username, password) {\r\n    let url = this.baseUrl + '/api/register?role=';\r\n    url += this.sharedService.role;\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    this.options.withCredentials = true;\r\n    return this.http.post(url, credentials, this.options)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  login(username: String, password: String) {\r\n    const url = this.baseUrl + '/api/login';\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    this.options.withCredentials = true;\r\n    return this.http.post(url, credentials, this.options)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    const url = this.baseUrl + '/api/logout';\r\n    this.options.withCredentials = true;\r\n    return this.http.post(url, {}, this.options)\r\n      .map(\r\n        (response: Response) => {\r\n          return response;\r\n        }\r\n      );\r\n  }\r\n  checkLogin() {\r\n    const url = this.baseUrl + '/api/loggedIn';\r\n    this.options.withCredentials = true;\r\n    return this.http.post(url, {}, this.options)\r\n      .map(\r\n        (res: Response) => {\r\n          const user = res.json();\r\n          if (user !== 0) {\r\n            this.sharedService.user = user;\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  loggedIn() {\r\n    const url = this.baseUrl + '/api/loggedIn';\r\n    this.options.withCredentials = true;\r\n    return this.http.post(url, {}, this.options)\r\n      .map(\r\n        (res: Response) => {\r\n          const user = res.json();\r\n          if (user !== 0) {\r\n            this.sharedService.user = user;\r\n            return true;\r\n          } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  // returns the user whose username and password match the username and password parameters\r\n  findUserByCredentials(username: String, password: String) {\r\n    const url =  this.baseUrl + '/api/user?username=' + username + '&password=' + password;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n      });\r\n  }\r\n\r\n  // returns the user in local users array whose _id matches the userId parameter\r\n  findUserById(uid: String) {\r\n    const url =  this.baseUrl + '/api/user/' + uid;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  //  adds the user parameter instance to the local users array\r\n  createUser(user: User) {\r\n    const url =  this.baseUrl + '/api/user';\r\n    return this.http.post(url, user)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  //  returns the user in local users array whose username matches the parameter username\r\n  findUserByUsername(username: String) {\r\n    const url =  this.baseUrl + '/api/user?username=' + username;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        });\r\n  }\r\n\r\n  // updates the user in local users array whose _id matches the userId parameter\r\n  updateUser(userId: String, user: User) {\r\n    const url = this.baseUrl + '/api/user/' + userId;\r\n    return this.http.put(url, user)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  follow(uid, oid) {\r\n    const url = this.baseUrl + '/api/user/follow?uid=' + uid + '&oid=' + oid;\r\n    return this.http.put(url, null)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  unfollow(uid, oid) {\r\n    const url = this.baseUrl + '/api/user/unfollow?uid=' + uid + '&oid=' + oid;\r\n    return this.http.put(url, null)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel(uid, wid) {\r\n    const url = this.baseUrl + '/api/user/cancel?uid=' + uid + '&wid=' + wid;\r\n    return this.http.put(url, null)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  checkFollow(uid, oid) {\r\n    const url = this.baseUrl + '/api/user/checkFollow?uid=' + uid + '&oid=' + oid;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  findFollowing(uid) {\r\n    const url = this.baseUrl + '/api/user/' + uid + '/findFollowing';\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  findRegister(wid, role) {\r\n    const url = this.baseUrl + '/api/user/' + wid + '/findRegister/' + role;\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  findAll() {\r\n    const url = this.baseUrl + '/api/user/findAll';\r\n    return this.http.get(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteUser(uid) {\r\n    const url = this.baseUrl + '/api/user/' + uid;\r\n    return this.http.delete(url)\r\n      .map(\r\n        (response: Response) => {\r\n          return response.json();\r\n        }\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.client.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\n\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl : 'http://localhost:3100'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}